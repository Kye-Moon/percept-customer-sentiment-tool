datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

model Review {
  id                Int               @id @default(autoincrement())
  createAt          String
  externalReference String            @unique
  body              String
  mentionSource     String
  username          String
  userDescription   String?
  profileImageUrl   String
  archived          Boolean?          @default(false)
  favourite         Boolean?          @default(false)
  onWall            Boolean?          @default(false)
  campaigns         CampaignReview[]
}

model Campaign {
  id              Int                   @id @default(autoincrement())
  createAt        DateTime              @default(now())
  updatedAt       DateTime              @updatedAt
  userId          String
  status          String                @default("ACTIVE")
  title           String
  description     String
  integrations    CampaignIntegration[]
  reviews         CampaignReview[]
}

model CampaignIntegration {
  id                    Int      @id @default(autoincrement())
  campaign              Campaign @relation(fields: [campaignId], references: [id])
  campaignId            Int
  productHuntPostUrl    String?
  productHuntReviewsUrl String?
  twitterCompanyName    String?
  companyTwitterHandle  String?
  updatedAt             DateTime @updatedAt
}

model CampaignReview {
  id         Int      @id @default(autoincrement())
  campaignId Int
  reviewId   Int
  campaign   Campaign? @relation(fields: [campaignId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  review     Review?   @relation(fields: [reviewId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([campaignId, reviewId])
}
