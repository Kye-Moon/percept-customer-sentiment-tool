# See the full yml reference at https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/
service: vigilant-octo-guacamole-api

# Uncomment `org` and `app` and enter manually if you want to integrate your
# deployment with the Serverless dashboard, or run `yarn serverless` in ./api to be
# prompted to connect to an app and these will be filled in for you.
# See https://www.serverless.com/framework/docs/dashboard/ for more details.
# org: your-org
# app: your-app

useDotenv: true
plugins:
  - serverless-iam-roles-per-function
  - "@agiledigital/serverless-sns-sqs-lambda"
provider:
  name: aws
  runtime: nodejs14.x
  region: ap-southeast-2 # AWS region where the service will be deployed, defaults to N. Virginia
  httpApi:          # HTTP API is used by default. To learn about the available options in API Gateway, see https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html
    cors:
      allowedOrigins:
        - '*' # This is the default value. You can remove this line if you want to restrict the CORS to a specific origin.
      # allowCredentials: true # allowCredentials should only be used when allowedOrigins doesn't include '*'
      allowedHeaders:
        - authorization
        - auth-provider
        - content-type
        - X-Amz-Date
        - X-Api-Key
        - X-Amz-Security-Token
        - X-Amz-User-Agent
    payload: '1.0'
    useProviderTags: true # https://www.serverless.com/framework/docs/deprecations/#AWS_HTTP_API_USE_PROVIDER_TAGS
  stackTags:
    source: serverless
    name: Redwood Lambda API with HTTP API Gateway
  tags:
    name: Redwood Lambda API with HTTP API Gateway
  lambdaHashingVersion: 20201221 # https://www.serverless.com/framework/docs/deprecations/#LAMBDA_HASHING_VERSION_V2
  environment:
    # Add environment variables here, either in the form
    # VARIABLE_NAME: ${env:VARIABLE_NAME} for vars in your local environment, or
    # VARIABLE_NAME: ${param:VARIABLE_NAME} for vars from the Serverless dashboard

package:
  individually: true
  patterns:
    - "!node_modules/.prisma/client/libquery_engine-*"
    - "node_modules/.prisma/client/libquery_engine-rhel-*"
    - "!node_modules/prisma/libquery_engine-*"
    - "!node_modules/@prisma/engines/**"

functions:
  graphql:
    description: graphql function deployed on AWS Lambda
    package:
      artifact: dist/zipballs/graphql.zip
    memorySize: 1024 # in megabytes
    timeout: 25      # seconds (max: 900 [15 minutes])
    tags:            # tags for this specific lambda function
      endpoint: /graphql
    handler: graphql.handler
    events:
      - httpApi:     # if a function should be limited to only GET or POST you can remove one or the other here
          path: /graphql
          method: GET
      - httpApi:
          path: /graphql
          method: POST
  integrationsRequestPublisher:
    package:
      artifact: dist/zipballs/integrationRequestPublisher.zip
    handler: integrationRequestPublisher.handler
    description: the Publish Handler
    memorySize: 1024 # in megabytes
    timeout: 30
    tags: # tags for this specific lambda function
      endpoint: /integrations
    events:
      - httpApi:
          path: /integrations
          method: POST
    environment:
      TOPIC_ARN: !Ref IntegrationsTopic
    iamRoleStatementsName: publish-function-role
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - "sns:Publish"
        Resource:
          - !Ref IntegrationsTopic
  integrationsConsumer:
    package:
      artifact: dist/zipballs/integrationConsumer.zip
    handler: integrationConsumer.handler
    description: the integrationConsumer Handler
    memorySize: 128
    timeout: 10
    events:
      - snsSqs:
          name: Event # Required - choose a name prefix for the event queue
          topicArn: !Ref IntegrationsTopic # Required - SNS topic to subscribe to
          visibilityTimeout: 120 # optional (in seconds) - AWS default is 30 secs
          rawMessageDelivery: true # Optional - default value is true
          enabled: true # Optional - default value is true
          filterPolicy: # Optional - filter messages that are handled
            integrationRequestState:
              - COMPLETED

resources:
  Resources:
    ## Integration Type Topics
    IntegrationsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: IntegrationRequests
  ## Outputs to import into the handlers service
  Outputs:
    IntegrationsTopicArn:
      Value: !Ref IntegrationsTopic
      Export:
        Name: IntegrationsTopicArn
